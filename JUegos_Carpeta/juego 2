import pygame
import random

# Inicialización
pygame.init()
screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption("Juego de Recolección")
clock = pygame.time.Clock()

# Colores
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
YELLOW = (255, 255, 0)

# Jugador
player_size = 40
player_x = 400
player_y = 300
player_speed = 5

# Objetos para recolectar
items = []
item_size = 20

# Puntuación
score = 0
font = pygame.font.SysFont(None, 36)

# Función para dibujar jugador
def draw_player(x, y):
    pygame.draw.circle(screen, GREEN, (x + player_size//2, y + player_size//2), player_size//2)

# Función para dibujar objetos
def draw_item(x, y):
    pygame.draw.rect(screen, YELLOW, (x, y, item_size, item_size))

# Bucle principal
running = True
while running:
    screen.fill(WHITE)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            
    # Movimiento del jugador
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < 800 - player_size:
        player_x += player_speed
    if keys[pygame.K_UP] and player_y > 0:
        player_y -= player_speed
    if keys[pygame.K_DOWN] and player_y < 600 - player_size:
        player_y += player_speed
        
    # Generar objetos
    if random.randint(1, 30) == 1:
        items.append([random.randint(0, 800 - item_size), random.randint(0, 600 - item_size)])
        
    # Recolectar objetos
    for item in items[:]:
        if (player_x < item[0] + item_size and
            player_x + player_size > item[0] and
            player_y < item[1] + item_size and
            player_y + player_size > item[1]):
            items.remove(item)
            score += 1
            
    # Dibujar objetos
    for item in items:
        draw_item(item[0], item[1])
        
    draw_player(player_x, player_y)
    
    # Mostrar puntuación
    score_text = font.render(f"Puntos: {score}", True, (0, 0, 0))
    screen.blit(score_text, (10, 10))
    
    pygame.display.update()
    clock.tick(60)

pygame.quit()
